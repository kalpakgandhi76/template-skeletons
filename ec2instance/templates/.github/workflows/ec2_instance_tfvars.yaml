name: Manage EC2 Instance

on:
  workflow_dispatch:
    inputs:
      tfVars:
        description: 'TFVars for the terraform'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true

env:
  AWS_ROLE_ARN: ${{ values.AWS_ROLE_ARN }}
  AWS_REGION: ${{ values.AWS_REGION }}

jobs:
  display-input-values:
    runs-on: ubuntu-latest
    steps:
      - name: Display Input Values
        run: |
          echo "TFVars: ${{ '${{ github.event.inputs.tfVars }}' }} "
          echo "Action: ${{ '${{ github.event.inputs.action }}' }}"

  ec2_plan:
    runs-on: ubuntu-latest
    needs: display-input-values
    if: ${{ "${{ github.event.inputs.action == 'plan' }}" }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate terraform.tfvars
        run: |
          echo '${{ '${{ github.event.inputs.tfVars }}' }}' | jq -r 'to_entries | .[] | "\(.key)=\"\(.value)\""' > ./terraform/terraform.tfvars

      - name: Display generated terraform.tfvars
        run: |
          cat ./terraform/terraform.tfvars

      - name: Commit terraform.tfvars
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update terraform.tfvars for instance deployment"
          git push
        working-directory: ./terraform

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ '${{ secrets.AWS_ACCESS_KEY_ID }}' }}
      #     aws-secret-access-key: ${{ '${{ secrets.AWS_SECRET_ACCESS_KEY }}' }}
      #     aws-session-token: ${{ '${{ secrets.AWS_SESSION_TOKEN }}' }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{'${{ env.AWS_ROLE_ARN }}'}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{'${{ env.AWS_REGION }}'}}
          
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan -var-file=terraform.tfvars -out=tfplan
        working-directory: ./terraform

      - name: Save Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./terraform/tfplan

  ec2_apply:
    runs-on: ubuntu-latest
    needs: ec2_plan
    if: ${{ "${{ github.event.inputs.action == 'apply' }}" }}
    steps:
      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: ./terraform

      - name: Terraform Apply (Manual Approval Required)
        run: terraform apply "tfplan"
        working-directory: ./terraform

  ec2_destroy:
    runs-on: ubuntu-latest
    needs: display-input-values
    if: ${{ "${{ github.event.inputs.action == 'destroy' }}" }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ '${{ secrets.AWS_ACCESS_KEY_ID }}' }}
          aws-secret-access-key: ${{ '${{ secrets.AWS_SECRET_ACCESS_KEY }}' }}
          aws-session-token: ${{ '${{ secrets.AWS_SESSION_TOKEN }}' }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Destroy Plan
        run: terraform plan -destroy -var-file=terraform.tfvars -out=tfplan
        working-directory: ./terraform

      - name: Save Destroy Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./terraform/tfplan

      - name: Terraform Destroy (Manual Approval Required)
        run: terraform apply "tfplan"
        working-directory: ./terraform
